#include <iostream>
const double PI = 3.14159265359; 
class Shape {
public:
    virtual double area() const = 0;
    virtual double volume() const = 0;
};
class Sphere : public Shape {
private:
    double radius;
public:
    Sphere(double r) : radius(r) {}

    double area() const override {
        return 4 * PI * radius * radius;
    }

    double volume() const override {
        return (4.0 / 3.0) * PI * radius * radius * radius;
    }
};

class Cylinder : public Shape {
private:
    double radius;
    double height;
public:
    Cylinder(double r, double h) : radius(r), height(h) {}

    double area() const override {
        return 2 * PI * radius * (radius + height);
    }

    double volume() const override {
        return PI * radius * radius * height;
    }
};

int main() {
    Sphere sphere(5.0);
    Cylinder cylinder(3.0, 7.0);

    std::cout << "Sphere Area: " << sphere.area() << std::endl;
    std::cout << "Sphere Volume: " << sphere.volume() << std::endl;

    std::cout << "Cylinder Area: " << cylinder.area() << std::endl;
    std::cout << "Cylinder Volume: " << cylinder.volume() << std::endl;

    return 0;
}
